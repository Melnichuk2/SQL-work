/*1.	Вивести значення наступних колонок: назва книги, ціна, назва видавництва. Використовувати внутрішнє з'єднання, застосовуючи where.*/
SELECT
    book.name,
    book.price,
    producer.name AS producer_name
FROM
    book,
    producer
WHERE
    book.id_producer = producer.id;

/*2.	Вивести значення наступних колонок: назва книги, назва категорії. Використовувати внутрішнє з'єднання, застосовуючи inner join.*/
SELECT
    book.name,
    producer.name AS producer_name
FROM
    book
INNER JOIN producer ON book.id_producer = producer.id
LIMIT 0, 25;    

/*3.Вивести значення наступних колонок: назва книги, ціна, назва видавництва, формат*/
SELECT
    book.name,
    book.price,
    producer.name AS producer_name,
    book.form AS FORM
FROM
    book
JOIN producer ON book.id_producer = producer.id
LIMIT 0, 25;

/*4.Вивести значення наступних колонок: тема, категорія, назва книги, назва видавництва. Фільтр по темам і категоріям*/
SELECT
    book.name,
    producer.name AS producer_name,
    topic.name AS theme,
    category.name AS category
FROM
    book
JOIN producer ON book.id_producer = producer.id
JOIN topic ON book.id_topic = topic.id
JOIN category ON book.id_category = category.id
ORDER BY
    book.id_topic ASC,
    category.name ASC
LIMIT 0, 25;

/*5. Вивести книги видавництва 'BHV', видані після 2000 р*/
SELECT * FROM book WHERE id_producer = 1 AND YEAR(date) > 2000;

/*6.Вивести загальну кількість сторінок по кожній назві категорії. Фільтр по спадаючій кількості сторінок*/
SELECT
    category.name AS category,
    SUM(sides) AS sides_count
FROM
    book
JOIN category ON book.id_category = category.id
GROUP BY
    category
ORDER BY
    sides_count DESC;
    
/*7.Вивести середню вартість книг по темі 'Використання ПК' і категорії 'Linux'*/
SELECT
    AVG(price) FROM book WHERE book.id_topic = 1 AND book.id_category = 5;

/*8.Вивести всі дані універсального відношення. Використовувати внутрішнє з'єднання, застосовуючи where*/
SELECT
    book.*,
    producer.name AS producer_name,
    category.name AS book_category,
    topic.name AS book_topic
FROM
    book,
    producer,
    category,
    topic
WHERE
    book.id_producer = producer.id AND book.id_category = category.id AND book.id_topic = topic.id;
    
/*9. Вивести всі дані універсального відношення. Використовувати внутрішнє з'єднання, застосовуючи inner join*/
SELECT
    book.*,
    producer.name AS producer_name,
    category.name AS book_category,
    topic.name AS book_topic
FROM
    book
INNER JOIN producer ON book.id_producer = producer.id
INNER JOIN category ON book.id_category = category.id
INNER JOIN topic ON book.id_topic = category.id;

/*10.Вивести всі дані універсального відношення. Використовувати зовнішнє з'єднання, застосовуючи left join / rigth join*/
SELECT
    book.*,
    producer.name AS producer_name,
    category.name AS book_category,
    topic.name AS book_topic
FROM
    book
LEFT JOIN producer ON book.id_producer = producer.id
LEFT JOIN category ON book.id_category = category.id
LEFT JOIN topic ON book.id_topic = category.id;
SELECT
    book.*,
    producer.name AS producer_name,
    category.name AS book_category,
    topic.name AS book_topic
FROM
    book
RIGHT JOIN producer ON book.id_producer = producer.id
RIGHT JOIN category ON book.id_category = category.id
RIGHT JOIN topic ON book.id_topic = category.id;

/*11.Вивести пари книг, що мають однакову кількість сторінок. Використовувати само об’єднання і аліаси (self join).*/

/*12. Вивести тріади книг, що мають однакову ціну. Використовувати самооб'єднання і аліаси (self join).*/

/*13. Вивести всі книги категорії 'C ++'. Використовувати підзапити (subquery).*/
SELECT  * FROM book WHERE id_category =(SELECT id FROM category WHERE category.name = 'C&C++');

/*14. Вивести книги видавництва 'BHV', видані після 2000 р Використовувати підзапити (subquery).*/
SELECT * FROM book WHERE id_category =( SELECT id FROM category WHERE category.name = 'BHV') AND YEAR(date) > 2000;

/*15. Вивести список видавництв, у яких розмір книг перевищує 400 сторінок. Використовувати пов'язані підзапити (correlated subquery).*/
SELECT * FROM producer WHERE ( SELECT MIN(sides) FROM book WHERE book.id_producer = producer.id) >= 400 ;

/*16. Вивести список категорій в яких більше 3-х книг. Використовувати пов'язані підзапити (correlated subquery).*/
SELECT * FROM category WHERE(SELECT COUNT(*) FROM book WHERE book.id_category = category.id) > 3;

/*17. Вивести список книг видавництва 'BHV', якщо в списку є хоча б одна книга цього видавництва. Використовувати exists.*/
SELECT * FROM book WHERE EXISTS ( SELECT * FROM producer WHERE producer.name = 'BHV' AND book.id_producer = producer.id);

/*18. Вивести список книг видавництва 'BHV', якщо в списку немає жодної книги цього видавництва. Використовувати not exists.*/
SELECT * FROM book WHERE NOT EXISTS ( SELECT * FROM producer WHERE producer.name = 'BHV' AND book.id_producer = producer.id) 
AND id_producer =( SELECT producer.id FROM producer WHERE producer.name = 'BHV');

/*19. Вивести відсортований загальний список назв тем і категорій. Використовувати union.*/
SELECT * FROM topic UNION SELECT * FROM category ORDER BY NAME;

/*20. Вивести відсортований в зворотному порядку загальний список перших слів, назв книг і категорій що не повторюються. Використовувати union*/
SELECT DISTINCT name
FROM (
  (
    SELECT REGEXP_SUBSTR(TRIM(name), '^[^\s]+') AS name
    FROM book
  )
  UNION ALL
  (
    SELECT REGEXP_SUBSTR(TRIM(name), '^[^\s]+') AS name
    FROM category
  )
) AS names ORDER BY name DESC;